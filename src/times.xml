<?xml version="1.0" encoding="utf-8"?>
<chapter version="5.0" xml:id="tim.times" xml:lang="en" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Times</title>

  <para>A <literal>Time</literal> object represents a specific moment as a time and a date, stored with microsecond granularity. It is stored as the number of seconds since the <firstterm>Unix epoch</firstterm>, which is 1970-01-01 01:00:00, so on some platforms <literal>Time</literal> cannot represent dates before 1970 or after 2038.</para>

  <sect1 xml:id="tim.instantiation">
    <title>Instantiation</title>

    <para><function>Time.now</function> creates a <literal>Time</literal> instance for the current time, with the resolution of the system clock. <function>Time.new</function> is identical when called without arguments; otherwise it must be given between one and seven arguments specifying the year, month, day, hour, minute, second, and offset from UTC, with which it initialises a <literal>Time</literal> object. All but the year argument are optional.</para>

    <para><function>Time.at(<replaceable>seconds</replaceable>, <replaceable>microseconds</replaceable>=0)</function> creates a <literal>Time</literal> object representing <replaceable>seconds</replaceable> seconds and <replaceable>microseconds</replaceable> microseconds from the Epoch. Both arguments may be any non-<literal>Complex</literal> numeric: if <replaceable>microseconds</replaceable> is a <literal>Float</literal> or <literal>Rational</literal>, the time has nanosecond granularity. A negative <replaceable>seconds</replaceable> represents a time before the Unix epoch, but this construction is operating-system specific. If <function>Time.at</function> is given a <literal>Time</literal> object as its sole argument, the argument is returned.</para>

    <para><function>Time.utc</function>, and its alias <function>Time.gm</function>, create a <literal>Time</literal> object for a given time in <acronym>UTC</acronym>. If ten arguments are given they are: second, minute, hour, day of month, year, day of week, isDST?, and the time zone abbreviation. Otherwise, between one and seven arguments are required: year, month, day of month, hour, minute, second, microseconds. In the second form, all but the first argument are optional; the latter may be omitted or <literal>nil</literal>. <function>Time.local</function>, and its alias <function>Time.mktime</function>, are identical to <function>Time.utc</function>, except they interpret their arguments in the local time zone.</para>

    <para>The arguments listed above all correspond to attributes of <literal>Time</literal> objects, so are described in <xref linkend="tim.attributes"/>.</para>
  </sect1>

  <sect1 xml:id="tim.attributes">
    <title>Attributes</title>

    <para>A <literal>Time</literal> object has the following primary attributes. If a <literal>Time</literal> method expects an argument corresponding to a given attribute, the argument must satisfy the attribute’s range; if the argument is omitted, the attribute’s default value is assumed.</para>

    <informaltable>
      <thead>
	<tr>
	  <th>Attribute</th>
	  <th>Description</th>
	  <th>Range</th>
	  <th>Default</th>
	  <th>Accessor</th>
	</tr>
      </thead>
      <tbody>
	<tr>
	  <td>Year</td>
	  <td>Year (possibly including century)</td>
	  <td>Positive <literal>Integer</literal>.</td>
	  <td>N/A</td>
	  <td><function>Time#year</function></td>
	</tr>
	<tr>
	  <td>Month</td>
	  <td>Month of year</td>
	  <td><literal>Integer</literal> (1–12) or three-letter English abbreviation, e.g. <emphasis>3</emphasis> or <emphasis>Feb</emphasis> for February.</td>
	  <td>1</td>
	  <td><function>Time#mon</function>, <function>Time#month</function></td>
	</tr>
	<tr>
	  <td>Day</td>
	  <td>Day of month</td>
	  <td><literal>Integer</literal>: 1–31.</td>
	  <td>1</td>
	  <td><function>Time#day</function>, <function>Time#mday</function></td>
	</tr>
	<tr>
	  <td>Week day</td>
	  <td>Day of week</td>
	  <td><literal>Integer</literal>: 0–6, where Sunday is 0.</td>
	  <td>0</td>
	  <td><function>Time#wday</function></td>
	</tr>
	<tr>
	  <td>Year day</td>
	  <td>Day of year</td>
	  <td><literal>Integer</literal>: 1–366.</td>
	  <td>1</td>
	  <td><function>Time#yday</function></td>
	</tr>
	<tr>
	  <td>Hour</td>
	  <td>Hour on 24-hour clock</td>
	  <td><literal>Integer</literal>: 0–23.</td>
	  <td>0</td>
	  <td><function>Time#hour</function></td>
	</tr>
	<tr>
	  <td>Minute</td>
	  <td>Minute of hour</td>
	  <td><literal>Integer</literal>: 0–59.</td>
	  <td>0</td>
	  <td><function>Time#min</function></td>
	</tr>
	<tr>
	  <td>Second</td>
	  <td>Second of minute</td>
	  <td><literal>Integer</literal>: 0–60<footnote><para>This range allows for leap seconds.</para></footnote>.</td>
	  <td>0</td>
	  <td><function>Time#sec</function></td>
	</tr>
	<tr>
	  <td>Microseconds</td>
	  <td>Microsecond<footnote><para>1 microsecond is 10<superscript>−6</superscript> seconds</para></footnote> of second</td>
	  <td>Positive numeric less than 1000000000.</td>
	  <td>0</td>
	  <td><function>Time#usec</function>, <function>Time#tv_usec</function></td>
	</tr>
	<tr>
	  <td>Nanoseconds</td>
	  <td>Nanosecond<footnote><para>1 nanosecond is 10<superscript>−9</superscript> seconds</para></footnote> of second</td>
	  <td><literal>Integer</literal></td>
	  <td>0</td>
	  <td><function>Time#nsec</function>, <function>Time#tv_nsec</function></td>
	</tr>
	<tr>
	  <td>Zone</td>
	  <td>Time zone abbreviation</td>
	  <td><literal>String</literal>, e.g. <emphasis>UTC</emphasis> or <emphasis>CST</emphasis>.</td>
	  <td>UTC<remark>TODO: Check this</remark></td>
	  <td><function>Time#zone</function></td>
	</tr>
	<tr>
	  <td>isDST?</td>
	  <td>Does the time occur in daylight saving time?</td>
	  <td><literal>true</literal> (yes) or <literal>false</literal> (no).</td>
	  <td><literal>false</literal><remark>TODO: Check this</remark></td>
	  <td><function>Time#isdst</function>, <function>Time#dst?</function></td>
	</tr>
      </tbody>
    </informaltable>
  </sect1>

 <sect1 xml:id="tim.predicates">
   <title>Predicates</title>

   <para><literal>Time</literal> objects respond to the following predicates. They return <literal>true</literal> if the condition is true; <literal>false</literal>, otherwise.</para>

   <variablelist>
     <varlistentry>
       <term><function>Time#dst?</function></term>
       <term><function>Time#isdst</function></term>
       <listitem>
	 <para>Occurs in <acronym>DST</acronym></para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#friday?</function></term>
       <listitem>
	 <para>Occurs on a Friday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#gmt?</function></term>
       <term><function>Time#utc?</function></term>
       <listitem>
	 <para>Occurs in <acronym>UTC</acronym></para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#monday?</function></term>
       <listitem>
	 <para>Occurs on a Monday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#saturday?</function></term>
       <listitem>
	 <para>Occurs on a Saturday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#sunday?</function></term>
       <listitem>
	 <para>Occurs on a Sunday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#thursday?</function></term>
       <listitem>
	 <para>Occurs on a Thursday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#tuesday?</function></term>
       <listitem>
	 <para>Occurs on a Tuesday</para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term><function>Time#wednesday?</function></term>
       <listitem>
	 <para>Occurs on a Wednesday</para>
       </listitem>
     </varlistentry>
   </variablelist>
 </sect1>
  
 <sect1 xml:id="tim.arithmetic">
   <title>Arithmetic</title>
   
   <para><function>Time#+(<replaceable>numeric</replaceable>)</function> adds <replaceable>numeric</replaceable> seconds to the receiver, and returns the result. Conversely, <function>Time#-(<replaceable>numeric</replaceable>)</function> subtracts <replaceable>numeric</replaceable> seconds from the receiver and returns the result. If <function>Time#-</function> is given a <literal>Time</literal> argument instead, it returns a new <literal>Time</literal> object representing the difference between them.</para>

   <para><literal>Time</literal> objects implement <function>Time#&lt;=&gt;</function> with the <link linkend="obj.order">standard semantics</link>, and mix-in the <literal>Comparable</literal> module. This allows inequalities to be tested between a <literal>Time</literal> object and a <literal>Numeric</literal> object—where the latter represents a number a seconds since the Unix epoch—or two <literal>Time</literal> objects.</para>
 </sect1>

 <sect1 xml:id="tim.format">
   <title>Formatting</title>

   <para><function>Time#strftime</function> converts the receiver to a <literal>String</literal> by means of a user-supplied <emphasis>format string</emphasis>, analogous to <xref linkend="str.format"/>. A format string contains any number of <emphasis>format directives</emphasis> surrounded by arbitrary characters. It is returned with each format directive substituted for its payload.</para>

<para>A format directive has the form <literal>%<replaceable>f</replaceable><replaceable>w</replaceable><replaceable>c</replaceable></literal>, where <replaceable>f</replaceable> is zero or more <firstterm>flags</firstterm>, <replaceable>w</replaceable> is an optional <replaceable>field width</replaceable>, and <replaceable>c</replaceable> a mandatory <replaceable>conversion specifier</replaceable>. Therefore, the simplest format directive has the form <literal>%<replaceable>c</replaceable></literal>. The minimum field width is the minimum number of characters the directive will be substituted for; if fewer would have used, they are padded with either zeros or blanks, as described in the <xref linkend="tim.format-specifiers-tbl"/> table. The flags are described in the <xref linkend="tim.format-flags-tbl"/> table.</para> 

   <table xml:id="tim.format-specifiers-tbl">
     <caption>Conversion Specifiers</caption>
     <thead>
       <tr>
	 <th>Specifier</th>
	 <th>Description</th>
	 <th>Range</th>
       </tr>
     </thead>
     <tbody>
       <tr>
	 <td><literal>a</literal></td>
	 <td>Abbreviated name of day</td>
	 <td><emphasis>Sun</emphasis>—<emphasis>Sat</emphasis></td>
       </tr>
       <tr>
	 <td><literal>A</literal></td>
	 <td>Name of day</td>
	 <td><emphasis>Sunday</emphasis>—<emphasis>Saturday</emphasis></td>
       </tr>
       <tr>
	 <td><literal>b</literal> / <literal>h</literal></td>
	 <td>Abbreviated name of month</td>
	 <td><emphasis>Jan</emphasis>—<emphasis>Dec</emphasis></td>
       </tr>
       <tr>
	 <td><literal>B</literal></td>
	 <td>Name of month</td>
	 <td><emphasis>January</emphasis>—<emphasis>December</emphasis></td>
       </tr>
       <tr>
	 <td><literal>c</literal></td>
	 <td>Date and time representation for current locale: <emphasis>"%a %b %e %T %Y"</emphasis></td>
	 <td>&#160;</td>
       </tr>
       <tr>
	 <td><literal>%C</literal></td>
	 <td>Century, i.e. year ÷ 100, zero-padded</td>
	 <td>00–99</td>
       </tr>
       <tr>
	 <td><literal>d</literal></td>
	 <td>Day of the month, zero-padded</td>
	 <td><emphasis>01</emphasis>–<emphasis>31</emphasis></td>
       </tr>
       <tr>
	 <td><literal>D</literal> / <literal>x</literal></td>
	 <td>Date representation, without time, for current locale: <emphasis>"%m/%d/%y"</emphasis></td>
	 <td>&#160;</td>
       </tr>
       <tr>
	 <td><literal>e</literal></td>
	 <td>Day of the month, blank-padded</td>
	 <td><emphasis> 1</emphasis>–<emphasis>31</emphasis></td>
       </tr>
       <tr>
	 <td><literal>F</literal></td>
	 <td>ISO 8601 date: <emphasis>"%Y-%m-%d"</emphasis></td>
	 <td><emphasis> 1</emphasis>–<emphasis>31</emphasis></td>
       </tr>
       <tr>
	 <td><literal>g</literal></td>
	 <td>ISO 8601 week-numbering year, last two digits</td>
	 <td><emphasis>00</emphasis>–<emphasis>99</emphasis></td>
       </tr>
       <tr>
	 <td><literal>G</literal></td>
	 <td>ISO 8601 week-numbering year</td>
	 <td><emphasis>0</emphasis>–</td>
       </tr>
       <tr>
	 <td><literal>H</literal></td>
	 <td>Hour of day on 24-hour clock, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>23</emphasis></td>
       </tr>
       <tr>
	 <td><literal>I</literal></td>
	 <td>Hour of day on 12-hour clock, zero-padded</td>
	 <td><emphasis>01</emphasis>—<emphasis>12</emphasis></td>
       </tr>
       <tr>
	 <td><literal>j</literal></td>
	 <td>Day of year, zero-padded</td>
	 <td><emphasis>001</emphasis>–<emphasis>366</emphasis></td>
       </tr>
       <tr>
	 <td><literal>k</literal></td>
	 <td>Hour of day on 24-hour clock, blank-padded</td>
	 <td><emphasis> 0</emphasis>–<emphasis>23</emphasis></td>
       </tr>
       <tr>
	 <td><literal>l</literal></td>
	 <td>Hour of day on 12-hour clock, blank-padded</td>
	 <td><emphasis> 1</emphasis>–<emphasis>12</emphasis></td>
       </tr>
       <tr>
	 <td><literal>L</literal></td>
	 <td>Millisecond of second, zero-padded</td>
	 <td><emphasis>000</emphasis>–<emphasis>999</emphasis></td>
       </tr>
       <tr>
	 <td><literal>m</literal></td>
	 <td>Month of year, zero-padded</td>
	 <td><emphasis>01</emphasis>—<emphasis>12</emphasis></td>
       </tr>
       <tr>
	 <td><literal>M</literal></td>
	 <td>Minute of the hour, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>59</emphasis></td>
       </tr>
       <tr>
	 <td><literal>n</literal></td>
	 <td>Newline character</td>
	 <td><emphasis>"\n"</emphasis></td>
       </tr>
       <tr>
	 <td><literal>N</literal></td>
	 <td>Fractional seconds, 9 digits by default</td>
	 <td><emphasis>000000000</emphasis>–<emphasis>999999999</emphasis></td>
       </tr>
       <tr>
	 <td><literal>p</literal></td>
	 <td>Meridian indicator, upper-case</td>
	 <td><emphasis>AM</emphasis>, <emphasis>PM</emphasis></td>
       </tr>
       <tr>
	 <td><literal>P</literal></td>
	 <td>Meridian indicator, lower-case</td>
	 <td><emphasis>am</emphasis>–<emphasis>pm</emphasis></td>
       </tr>
       <tr>
	 <td><literal>r</literal></td>
	 <td>12-hour-clock time: <emphasis>"%I:%M:%S %p"</emphasis></td>
	 <td><emphasis>12:00:00 AM</emphasis>—<emphasis>11:59:59 PM</emphasis></td>
       </tr>
       <tr>
	 <td><literal>R</literal></td>
	 <td>24-hour-clock time: <emphasis>"%H:%M"</emphasis></td>
	 <td><emphasis>00:00</emphasis>—<emphasis>23:59</emphasis></td>
       </tr>
       <tr>
	 <td><literal>s</literal></td>
	 <td>Number of seconds since the Unix epoch</td>
	 <td><emphasis>0</emphasis>–</td>
       </tr>
       <tr>
	 <td><literal>S</literal></td>
	 <td>Second of minute, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>60</emphasis></td>
       </tr>
       <tr>
	 <td><literal>t</literal></td>
	 <td>Tab character</td>
	 <td><emphasis>"\t"</emphasis></td>
       </tr>
       <tr>
	 <td><literal>T</literal> / <literal>X</literal></td>
	 <td>24-hour-clock time: <emphasis>"%H:%M:%S"</emphasis></td>
	 <td><emphasis>00:00:00</emphasis>—<emphasis>23:59:59</emphasis></td>
       </tr>
       <tr>
	 <td><literal>u</literal></td>
	 <td>Day of week, <emphasis>1</emphasis> being Monday</td>
	 <td><emphasis>1</emphasis>–<emphasis>7</emphasis></td>
       </tr>
       <tr>
	 <td><literal>U</literal></td>
	 <td>Week number of year, starting with the first Sunday as the first day of week <emphasis>01</emphasis>, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>53</emphasis></td>
       </tr>
       <tr>
	 <td><literal>v</literal></td>
	 <td>VMS date: <emphasis>%e-%b-%Y"</emphasis></td>
	 <td>&#160;</td>
       </tr>
       <tr>
	 <td><literal>V</literal></td>
	 <td>ISO 8601 week number of week-numbering year, zero-padded</td>
	 <td><emphasis>01</emphasis>–<emphasis>53</emphasis></td>
       </tr>
       <tr>
	 <td><literal>w</literal></td>
	 <td>Day of week, <emphasis>0</emphasis> being Sunday</td>
	 <td><emphasis>0</emphasis>–<emphasis>6</emphasis></td>
       </tr>
       <tr>
	 <td><literal>W</literal></td>
	 <td>Week number of year, starting with the first Monday as the first day of week <emphasis>01</emphasis>, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>53</emphasis></td>
       </tr>
       <tr>
	 <td><literal>y</literal></td>
	 <td>Year without century, zero-padded</td>
	 <td><emphasis>00</emphasis>–<emphasis>99</emphasis></td>
       </tr>
       <tr>
	 <td><literal>Y</literal></td>
	 <td>Year including century</td>
	 <td><emphasis>0</emphasis>–</td>
       </tr>
       <tr>
	 <td><literal>z</literal></td>
	 <td>Hour and minute offset from UTC</td>
	 <td>+00:01–+23:59</td>
       </tr>
       <tr>
	 <td><literal>Z</literal></td>
	 <td>Abbreviated name of time zone</td>
	 <td>&#160;</td>
       </tr>
     </tbody>
   </table>

   <table xml:id="tim.format-flags-tbl">
     <caption>Flags</caption>
     <thead>
       <tr>
	 <th>Flag</th>
	 <th>Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
	 <td><literal>-</literal></td>
	 <td>Don’t pad numerical output</td>
       </tr>
       <tr>
	 <td><literal>_</literal></td>
	 <td>Pad with blanks</td>
       </tr>
       <tr>
	 <td><literal>0</literal></td>
	 <td>Pad with zeros</td>
       </tr>
       <tr>
	 <td><literal>^</literal></td>
	 <td>Uppercase the output</td>
       </tr>
       <tr>
	 <td><literal>#</literal></td>
	 <td>Invert the case of the output</td>
       </tr>
       <tr>
	 <td><literal>:</literal></td>
	 <td>Use colons for <literal>%z</literal></td>
       </tr>
     </tbody>
   </table>
 </sect1>

 <sect1 xml:id="tim.coercion">
   <title>Coercion</title>
   
   <para><function>Time#to_a</function> coerces its receiver into a ten-element <literal>Array</literal> of its attributes in this order: <emphasis>second</emphasis>, <emphasis>minute</emphasis>, <emphasis>hour</emphasis>, <emphasis>day of month</emphasis>, <emphasis>month</emphasis>, <emphasis>year</emphasis>, <emphasis>day of week</emphasis>, <emphasis>day of year</emphasis>, <emphasis>isDST?</emphasis>, and <emphasis>zone</emphasis>. All elements are <literal>Integer</literal>s except <emphasis>isDST?</emphasis>, which is <literal>true</literal> or <literal>false</literal>, and <emphasis>zone</emphasis>, which is a <literal>String</literal>.</para>

   <para>A <literal>Time</literal> object may be coerced into a <literal>Float</literal> or <literal>Rational</literal> with <function>Time#to_f</function> and <function>Time#to_r</function>, respectively. <function>Time#to_i</function>, and its alias <function>Time#tv_sec</function>, converts the receiver into an <literal>Integer</literal> by truncating any fractional seconds, i.e. it is equivalent to <literal>time.to_f.to_i</literal>.</para>

   <para>For a local time, <function>Time#to_s</function> is equivalent to calling <function>Time#strftime('%Y-%m-%d %H:%M:%S %z')</function>; for a UTC times, it is equivalent to <function>Time#strftime('%Y-%m-%d %H:%M:%S UTC')</function>. Alternatively, <function>Time#asctime</function>, and its alias <function>Time#ctime</function>, return a canonical <literal>String</literal> representation of their receiver, equivalent to <function>Time#strftime('%a %b %e %T %Y')</function>.</para>
 </sect1>

 <sect1 xml:id="tim.zone">
   <title>Zone Conversions</title>

   <para>The time zone associated with a <literal>Time</literal> object is set during <link linkend="tim.instantiation">initialisation</link>, and queried with <function>Time#zone</function>. It can be changed to UTC with <function>Time#getutc</function>, and its alias <function>Time#getgm</function>, which return a new <literal>Time</literal> object representing the receiver in UTC. <function>Time#utc</function>, and its alias <function>Time#gmtime</function>, do likewise but convert the receiver in-place.</para>

   <para>Similarly, <function>Time#getlocal</function> returns a new <literal>Time</literal> object representing the receiver in the local time zone. <function>Time#localtime</function> is identical except it modifies the receiver in-place.</para>
 </sect1>
</chapter>